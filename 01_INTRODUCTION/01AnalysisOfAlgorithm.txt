find summ of first n natural  number

int fun1(int n)
{
    return n*(n+1)/2   // fun1()-> C1
}

int fun2(int n)
{
    int sum =0;
    for(int i=1;i<=n;i++)  //// fun2()-> C2n+c3
    {
        sum = sum +i;
        return sum;
    }
}

int fun3(int n)
{
    int sum =0;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=i;j++)   // fun3()-> C4n^2+c5n+c6
        sum++;

        return sum;
}


// best average and worst cases and asymptotic notation

int getsum(int arr[];int n)
{
    int sum =0;
    for(int i=0;i<n;i++)  // order of growth is n
    sum = sum + arr[i];
    return sum;
}


// example for best, average and worst cases
 2.00
int getsum(int arr[];int n)
{
    if(n%2!=0)
    return 0;
    for(int i=0;i<n;i++)
    sum = sum+arr[i];
    return sum;
}


// big O notation

APPLICTION

int linearSearch(int arr[];int n;int x)
{
    for(int i=0;i<n;i++)
    if(arr[i]==x)
    return i;     //O(n) time compexity
    return -1;

}